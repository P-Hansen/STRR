"""Initial Migration

Revision ID: 191f8d1ddc48
Revises:
Create Date: 2024-04-23 21:27:55.805959

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '191f8d1ddc48'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=1000), nullable=True),
                    sa.Column('firstname', sa.String(length=1000), nullable=True),
                    sa.Column('lastname', sa.String(length=1000), nullable=True),
                    sa.Column('middlename', sa.String(length=1000), nullable=True),
                    sa.Column('email', sa.String(length=1024), nullable=True),
                    sa.Column('sub', sa.String(length=36), nullable=True),
                    sa.Column('iss', sa.String(length=1024), nullable=True),
                    sa.Column('idp_userid', sa.String(length=256), nullable=True),
                    sa.Column('login_source', sa.String(length=200), nullable=True),
                    sa.Column('creation_date', sa.DateTime(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('sub')
                    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_idp_userid'), ['idp_userid'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=False)

    op.create_table('addresses',
                    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
                    sa.Column('country', sa.String(), nullable=False),
                    sa.Column('street_address', sa.String(), nullable=False),
                    sa.Column('city', sa.String(), nullable=False),
                    sa.Column('province', sa.String(), nullable=False),
                    sa.Column('postal_code', sa.String(), nullable=False)
                    )

    op.create_table('property_managers',
                    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('primary_address_id', sa.Integer(), nullable=False),
                    sa.Column('secondary_address_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['primary_address_id'], ['addresses.id'], ),
                    sa.ForeignKeyConstraint(['secondary_address_id'], ['addresses.id'], )
                    )

    op.create_table('rental_properties',
                    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
                    sa.Column('property_manager_id', sa.Integer(), nullable=False),
                    sa.Column('address_id', sa.Integer(), nullable=False),
                    sa.Column('nickname', sa.String(), nullable=True),
                    sa.Column('parcel_identifier', sa.String(), nullable=True),
                    sa.Column('local_business_licence', sa.String(), nullable=True),
                    sa.Column('property_type', sa.String(), nullable=False),
                    sa.Column('ownership_type', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['property_manager_id'], ['property_managers.id'], ),
                    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], )
                    )

    op.create_table('rental_platforms',
                    sa.Column('id', sa.Integer(), primary_key=True, autoincrement=True),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('property_id', sa.Integer(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['property_id'], ['rental_properties.id'], )
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')

    op.drop_table('rental_platforms')
    op.drop_table('rental_properties')
    op.drop_table('property_managers')
    op.drop_table('addresses')
    # ### end Alembic commands ###
